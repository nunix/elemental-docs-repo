"use strict";(self.webpackChunkelemental_docs=self.webpackChunkelemental_docs||[]).push([[710],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>h});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),s=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=s(e.components);return a.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=s(t),u=r,h=p["".concat(c,".").concat(u)]||p[u]||d[u]||i;return t?a.createElement(h,o(o({ref:n},m),{},{components:t})):a.createElement(h,o({ref:n},m))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4240:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=t(7462),r=(t(7294),t(3905));const i={sidebar_label:"Inventory Management",title:"",version_badge:"1.3.0"},o=void 0,l={unversionedId:"inventory-management",id:"version-1.2/inventory-management",title:"",description:"Inventory Management",source:"@site/versioned_docs/version-1.2/inventory-management.md",sourceDirName:".",slug:"/inventory-management",permalink:"/inventory-management",draft:!1,tags:[],version:"1.2",frontMatter:{sidebar_label:"Inventory Management",title:"",version_badge:"1.3.0"},sidebar:"docs",previous:{title:"Hardware Labels",permalink:"/hardwarelabels"},next:{title:"Backup",permalink:"/backup"}},c={},s=[{value:"Inventory Management",id:"inventory-management",level:2},{value:"MachineInventory",id:"machineinventory",level:3},{value:"Reference",id:"reference",level:4},{value:"MachineRegistration",id:"machineregistration",level:3},{value:"Reference",id:"reference-1",level:4}],m={toc:s},p="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(p,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"inventory-management"},"Inventory Management"),(0,r.kt)("p",null,"The Elemental operator can hold an inventory of machines and\nthe mapping of the machine to it's configuration and assigned cluster."),(0,r.kt)("h3",{id:"machineinventory"},"MachineInventory"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"MachineInventory")," holds all the relevant information for a registered machine.",(0,r.kt)("br",{parentName:"p"}),"\n","Upon successful registration, the ",(0,r.kt)("inlineCode",{parentName:"p"},"MachineInventory")," will inherit all ",(0,r.kt)("inlineCode",{parentName:"p"},"machineInventoryLabels")," defined in the related ",(0,r.kt)("inlineCode",{parentName:"p"},"MachineRegistration"),".",(0,r.kt)("br",{parentName:"p"}),"\n","Additionally, the machine ",(0,r.kt)("inlineCode",{parentName:"p"},"annotations")," will also be updated on each successful registration.  "),(0,r.kt)("p",null,"By default, Elemental Teal machines will attempt a registration update every 24 hours to update labels and annotations.  "),(0,r.kt)("h4",{id:"reference"},"Reference"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: elemental.cattle.io/v1beta1\nkind: MachineInventory\nmetadata:\n  # Machine annotations can be useful to identify hosts\n  annotations:\n    elemental.cattle.io/auth: tpm\n    elemental.cattle.io/registration-ip: 192.168.122.152\n  labels:\n    # A label inherited from the MachineRegistration definition\n    element: fire\n    # Generic SMBIOS labels that are typically populated with\n    # the MachineRegister approach\n    machineUUID: f266c64b-3972-40e7-9937-3dc4a311436c\n    manufacturer: QEMU\n    productName: Standard-PC-Q35-ICH9-2009\n    serialNumber: Not-Specified\n    # Custom labels can be applied to each MachineInventory\n    myCustomLabel: foo \n  name: m-479ab68e-00ff-4081-a731-5b1a76610289\n  # The namespace must match the namespace of the cluster\n  # assigned to the clusters.provisioning.cattle.io resource\n  namespace: fleet-default\n  # A reference to the MachineInventorySelector that links the \n  # machine to a Cluster definition\n  ownerReferences:\n  - apiVersion: elemental.cattle.io/v1beta1\n    controller: true\n    kind: MachineInventorySelector\n    name: fire-machine-selector-qcn7d\n    uid: 0a1f751e-4ca9-4a0d-919a-97ba1f434d12\nspec:\n  # The hash of the TPM EK public key. This is used if you are\n  # using TPM2 to identifiy nodes.  You can obtain the TPM by\n  # running `rancherd get-tpm-hash` on the node. Or nodes can\n  # report their TPM hash by using the MachineRegister\n  tpmHash: d68795c6192af9922692f050b...\n")),(0,r.kt)("h3",{id:"machineregistration"},"MachineRegistration"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"MachineRegistration")," holds information on how to install and configure all connected Elemental Teal machines.  "),(0,r.kt)("p",null,"It's possible to update the ",(0,r.kt)("inlineCode",{parentName:"p"},"spec.machineInventoryLabels")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"spec.machineInventoryAnnotations")," and this will be applied to all registered machines.\nBy default, Elemental Teal machines will attempt a registration update every 24 hours to update labels and annotations."),(0,r.kt)("p",null,"While it's possible to modify the ",(0,r.kt)("inlineCode",{parentName:"p"},"spec.config")," definition, updates to the ",(0,r.kt)("inlineCode",{parentName:"p"},"spec.config")," will be ignored by machines that already completed installation.\nMachines that couldn't complete the installation will try again every 30 minutes by reloading the remote ",(0,r.kt)("inlineCode",{parentName:"p"},"MachineRegistration")," definition. This can be useful to correct ",(0,r.kt)("inlineCode",{parentName:"p"},"spec.config")," mistakes that prevent successful installation (for ex. ",(0,r.kt)("inlineCode",{parentName:"p"},"spec.config.elemental.install.device"),"), without having to create a new ",(0,r.kt)("inlineCode",{parentName:"p"},"MachineRegistration")," and a new ISO.  "),(0,r.kt)("h4",{id:"reference-1"},"Reference"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: elemental.cattle.io/v1beta1\nkind: MachineRegistration\nmetadata:\n  name: fire-nodes\n  # The namespace must match the namespace of the cluster\n  # assigned to the clusters.provisioning.cattle.io resource\n  namespace: fleet-default\nspec:\n  # The cloud config that will be used to provision the node\n  config:\n    cloud-config:\n      users:\n        - name: root\n          passwd: root\n    elemental:\n      install:\n        reboot: true\n        device: /dev/sda\n        debug: true\n  # Labels to be added to the created MachineInventory object\n  machineInventoryLabels:\n    element: fire\n    manufacturer: "${System Information/Manufacturer}"\n    productName: "${System Information/Product Name}"\n    serialNumber: "${System Information/Serial Number}"\n    machineUUID: "${System Information/UUID}"\n  # Annotations to be added to the created MachineInventory object\n  machineInventoryAnnotations: {}\n')))}d.isMDXComponent=!0}}]);