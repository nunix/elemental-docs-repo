"use strict";(self.webpackChunkelemental_docs=self.webpackChunkelemental_docs||[]).push([[8180],{46084:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>d});var i=o(17624),t=o(4552);const c={sidebar_label:"Include cloud-config from removable devices",title:""},l=void 0,s={id:"removable-device-cloudconfig",title:"",description:"How to include cloud-config files from removable devices",source:"@site/versioned_docs/version-1.4/removable-device-cloudconfig.md",sourceDirName:".",slug:"/removable-device-cloudconfig",permalink:"/removable-device-cloudconfig",draft:!1,unlisted:!1,tags:[],version:"1.4",frontMatter:{sidebar_label:"Include cloud-config from removable devices",title:""},sidebar:"docs",previous:{title:"How to use Elemental with Rancher and VMware",permalink:"/rancher-vmware"},next:{title:"Add a custom certificate",permalink:"/custom-certificate"}},a={},d=[{value:"How to include cloud-config files from removable devices",id:"how-to-include-cloud-config-files-from-removable-devices",level:3},{value:"Include non cloud-config data",id:"include-non-cloud-config-data",level:4}];function r(e){const n={a:"a",code:"code",em:"em",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,t.M)(),...e.components},{Head:o}=n;return o||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o,{children:(0,i.jsx)("link",{rel:"canonical",href:"https://elemental.docs.rancher.com/removable-device-cloudconfig"})}),"\n",(0,i.jsx)(n.h3,{id:"how-to-include-cloud-config-files-from-removable-devices",children:"How to include cloud-config files from removable devices"}),"\n",(0,i.jsxs)(n.p,{children:["Elemental nodes support loading ",(0,i.jsx)(n.a,{href:"/cloud-config-reference",children:"cloud-config"})," files from specific block devices.\nIn particular supports loading cloud-config files from an ISO having ",(0,i.jsx)(n.code,{children:"CIDATA"})," as the volume ID or any vFAT formatted\ndevice labeled with ",(0,i.jsx)(n.code,{children:"CIDATA"}),". If a device matching this criteria is found on early boot the Elemental client will\nread it and look for a ",(0,i.jsx)(n.code,{children:"user-data"})," file in its root."]}),"\n",(0,i.jsx)(n.p,{children:"As an example an ISO including a cloud-config file can be created on a Linux host with the procedure below."}),"\n",(0,i.jsxs)(n.p,{children:["Create a ",(0,i.jsx)(n.code,{children:"user-data"})," file with the cloud-config data in it. In the example below we just set a\nproxy:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="user-data" showLineNumbers',children:'#cloud-config\nwrite_files:\n- path: /etc/sysconfig/proxy\n  append: true\n  content: |\n    PROXY_ENABLED="yes"\n    HTTP_PROXY=http://some.domain.org:8080\n    HTTPS_PROXY=https://some.domain.org:8080\n    NO_PROXY="localhost, 127.0.0.1"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Once the ",(0,i.jsx)(n.code,{children:"user-data"})," file exists create an ISO including only this file by using the ",(0,i.jsx)(n.code,{children:"mkisofs"})," Linux utility:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mkisof -o cidata.iso -V CIDATA -J -r user-data\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The result is an ISO labeled with ",(0,i.jsx)(n.code,{children:"CIDATA"})," including the ",(0,i.jsx)(n.code,{children:"user-data"})," file."]}),"\n",(0,i.jsxs)(n.p,{children:["At boot the ",(0,i.jsx)(n.code,{children:"user-data"})," file will be copied as is to ",(0,i.jsx)(n.code,{children:"/oem/user-data"})," and in case it contains cloud-config data\nan extra copy will be added as ",(0,i.jsx)(n.code,{children:"/oem/user-data.yaml"}),". The file ",(0,i.jsx)(n.code,{children:"/oem/user-data.yaml"})," will be parsed\non any later cloud-init stage."]}),"\n",(0,i.jsxs)(n.p,{children:["Since the data is copied to ",(0,i.jsx)(n.code,{children:"/oem"})," it will be persistent, hence on follow up reboots the removable device is\nnot required to be present any more. If still present on follow up reboots, it just overwrites any\naleady pre-existing data."]}),"\n",(0,i.jsx)(n.h4,{id:"include-non-cloud-config-data",children:"Include non cloud-config data"}),"\n",(0,i.jsxs)(n.p,{children:["If the ",(0,i.jsx)(n.code,{children:"user-data"})," is not containing cloud-config data the Elemental client will just copy it as\nis to ",(0,i.jsx)(n.code,{children:"/oem/user-data"}),". Only ",(0,i.jsx)(n.code,{children:"*.yaml"})," files are parsed when executing cloud-init stages, so in that\ncase the file will be ignored by cloud-init services."]}),"\n",(0,i.jsxs)(n.p,{children:["If the ",(0,i.jsx)(n.code,{children:"user-data"})," contains a script the Elemental client will, in addition, try to execute it. The way\nElemental client determines if ",(0,i.jsx)(n.code,{children:"user-data"})," is a script or not is by the presence of a ",(0,i.jsx)(n.em,{children:"Shebang"})," in the\nfirst line. For example, the previous ",(0,i.jsx)(n.code,{children:"user-data"})," file could be rewritten as:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title="user-data" showLineNumbers',children:'#!/bin/bash\n\ncat <<EOF >> /etc/sysconfig/proxy\nPROXY_ENABLED="yes"\nHTTP_PROXY=http://some.domain.org:8080\nHTTPS_PROXY=https://some.domain.org:8080\nNO_PROXY="localhost, 127.0.0.1"\nEOF\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}},4552:(e,n,o)=>{o.d(n,{I:()=>s,M:()=>l});var i=o(11504);const t={},c=i.createContext(t);function l(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);