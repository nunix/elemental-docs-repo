"use strict";(self.webpackChunkelemental_docs=self.webpackChunkelemental_docs||[]).push([[7898],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(t),d=l,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||r;return t?a.createElement(f,o(o({ref:n},p),{},{components:t})):a.createElement(f,o({ref:n},p))}));function d(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,o=new Array(r);o[0]=u;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var c=2;c<r;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9984:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=t(7462),l=(t(7294),t(3905)),r=t(2070);const o={sidebar_label:"Cluster reference",title:""},i="Cluster reference",s={unversionedId:"cluster-reference",id:"version-stable/cluster-reference",title:"",description:"A Cluster definition includes a kubernetesVersion and a list of machinePools to deploy the cluster to.",source:"@site/versioned_docs/version-stable/cluster-reference.md",sourceDirName:".",slug:"/cluster-reference",permalink:"/cluster-reference",draft:!1,tags:[],version:"stable",frontMatter:{sidebar_label:"Cluster reference",title:""},sidebar:"docs",previous:{title:"MachineInventorySelectorTemplate reference",permalink:"/machineinventoryselectortemplate-reference"},next:{title:"Elemental Operator Helm Chart",permalink:"/elementaloperatorchart-reference"}},c={},p=[{value:"rkeConfig.machinePools",id:"rkeconfigmachinepools",level:2},{value:"machinePools Spec Reference",id:"machinepools-spec-reference",level:2},{value:"machineConfigRef Spec Reference",id:"machineconfigref-spec-reference",level:2},{value:"Example",id:"example",level:3}],m=(u="CodeBlock",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",e)});var u;const d={toc:p};function f(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"cluster-reference"},"Cluster reference"),(0,l.kt)("p",null,"A ",(0,l.kt)("inlineCode",{parentName:"p"},"Cluster")," definition includes a ",(0,l.kt)("inlineCode",{parentName:"p"},"kubernetesVersion")," and a list of ",(0,l.kt)("inlineCode",{parentName:"p"},"machinePools")," to deploy the cluster to."),(0,l.kt)("p",null,"For how to select a ",(0,l.kt)("inlineCode",{parentName:"p"},"kubernetesVersion")," please check our ",(0,l.kt)("a",{parentName:"p",href:"/kubernetesversions"},"Kubernetes Versions")," page."),(0,l.kt)("p",null,"A ",(0,l.kt)("inlineCode",{parentName:"p"},"machinePool")," is a bundle of configuration with a ",(0,l.kt)("inlineCode",{parentName:"p"},"ObjectReference")," so the cluster is deployed to those ",(0,l.kt)("inlineCode",{parentName:"p"},"machinePools"),"\nwith the proper roles (etcd, control-plane, worker) with a quantity (how many nodes to deploy from this pool) and some extra configurations (rolling update config, max unhealthy nodes, etc...)."),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"showLineNumbers",showLineNumbers:!0},"kind: Cluster\napiVersion: provisioning.cattle.io/v1\nmetadata:\n  name: ...\n  namespace: ...\nspec:\n  rkeConfig:\n    machinePools:\n      - name: ...\n        controlPlaneRole: ...\n        etcdRole: ...\n        workerRole: ...\n        quantity: ...\n        machineConfigRef:\n          apiVersion: elemental.cattle.io/v1beta1\n          kind: MachineInventorySelectorTemplate\n          name: ...\n      - name: ...\n        controlPlaneRole: ...\n        etcdRole: ...\n        workerRole: ...\n        quantity: ...\n        machineConfigRef:\n          apiVersion: elemental.cattle.io/v1beta1\n          kind: MachineInventorySelectorTemplate\n          name: ...\n"))),(0,l.kt)("p",null,"It's also possible to disable cluster components via the ",(0,l.kt)("inlineCode",{parentName:"p"},"Cluster")," object in ",(0,l.kt)("inlineCode",{parentName:"p"},"spec.rkeConfig.machineGlobalConfig"),", for example:"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Service Disabling Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"showLineNumbers",showLineNumbers:!0},"kind: Cluster\napiVersion: provisioning.cattle.io/v1\nmetadata:\n  name: ...\n  namespace: ...\nspec:\n  rkeConfig:\n    machinePools:\n      - name: ...\n        controlPlaneRole: ...\n        etcdRole: ...\n        workerRole: ...\n        quantity: ...\n        machineConfigRef:\n          apiVersion: elemental.cattle.io/v1beta1\n          kind: MachineInventorySelectorTemplate\n          name: ...\n    machineGlobalConfig:\n      disable:\n        - servicelb\n        - ...\n"))),(0,l.kt)("h2",{id:"rkeconfigmachinepools"},"rkeConfig.machinePools"),(0,l.kt)("p",null,"A list of ",(0,l.kt)("inlineCode",{parentName:"p"},"machinePools"),". A minimum of 1 ",(0,l.kt)("inlineCode",{parentName:"p"},"machinePools")," is required for the cluster to be deployed to."),(0,l.kt)("h2",{id:"machinepools-spec-reference"},"machinePools Spec Reference"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default value"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"controlPlaneRole"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Set machines in this pool as control-plane")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"etcdRole"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Set machines in this pool as etcd")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"workerRole"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Set machines in this pool as worker")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"nil"),(0,l.kt)("td",{parentName:"tr",align:null},"Name for this pool")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"quantity"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"nil"),(0,l.kt)("td",{parentName:"tr",align:null},"Number of machines to deploy from this pool")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"unhealthyNodeTimeout"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"nil"),(0,l.kt)("td",{parentName:"tr",align:null},"Timeout for unhealthy node health checks")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"machineConfigRef"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"ObjectReference"),(0,l.kt)("td",{parentName:"tr",align:null},"Reference to an object used to know what nodes are part of this pool")))),(0,l.kt)("p",null,"A minimum of ",(0,l.kt)("inlineCode",{parentName:"p"},"quantity")," set to one is required for this pool to be used.\nBasically translates to how many nodes from this pool are going to be setup for this cluster."),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"showLineNumbers",showLineNumbers:!0},"kind: Cluster\napiVersion: provisioning.cattle.io/v1\nmetadata:\n  name: cluster-example\n  namespace: example-default\nspec:\n  rkeConfig:\n    machinePools:\n      - name: examplePool \n        controlPlaneRole: true\n        etcdRole: true\n        workerRole: false\n        quantity: 3\n        unhealthyNodeTimeout: 0s\n        machineConfigRef:\n          apiVersion: elemental.cattle.io/v1beta1\n          kind: MachineInventorySelectorTemplate\n          name: exampleSelector\n"))),(0,l.kt)("h2",{id:"machineconfigref-spec-reference"},"machineConfigRef Spec Reference"),(0,l.kt)("p",null,"A ",(0,l.kt)("inlineCode",{parentName:"p"},"machineConfigRef")," is a generic k8s ",(0,l.kt)("inlineCode",{parentName:"p"},"ObjectReference")," which usually contain a\n",(0,l.kt)("inlineCode",{parentName:"p"},"kind")," ",(0,l.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"apiVersion")," to point to a different object."),(0,l.kt)("p",null,"In Elemental, we set this to a ",(0,l.kt)("a",{parentName:"p",href:"/machineinventoryselectortemplate-reference"},"MachineInventorySelectorTemplate"),".\nThis allows us to point to more than one object by using the selector."),(0,l.kt)("h3",{id:"example"},"Example"),(0,l.kt)("p",null,"The example below creates a cluster that uses 2 different ",(0,l.kt)("inlineCode",{parentName:"p"},"machinePool"),"'s to set different nodes to control-plane and workers nodes,\nbased on 2 different ",(0,l.kt)("inlineCode",{parentName:"p"},"MachineInventorySelectorTemplate")," that select their nodes based on a ",(0,l.kt)("inlineCode",{parentName:"p"},"MachineInventory")," label (location)"),(0,l.kt)("admonition",{title:"warning",type:"warning"},(0,l.kt)("p",{parentName:"admonition"},"The labels for the example are manual set labels, they are not set by Elemental automatically.."),(0,l.kt)("p",{parentName:"admonition"},"For automatic labels generated by Elemental please check the ",(0,l.kt)("a",{parentName:"p",href:"/smbios"},"SMBIOS")," page.")),(0,l.kt)(m,{language:"yaml",title:"Example of a cluster with more than one machinePool",showLineNumbers:!0,mdxType:"CodeBlock"},r.Z))}f.isMDXComponent=!0},2070:(e,n,t)=>{t.d(n,{Z:()=>a});const a="kind: Cluster\napiVersion: provisioning.cattle.io/v1\nmetadata:\n  name: cluster-machinepools\n  namespace: fleet-default\nspec:\n  rkeConfig:\n    machinePools:\n      - name: controlPlanePool\n        controlPlaneRole: true\n        etcdRole: true\n        workerRole: false\n        quantity: 3\n        unhealthyNodeTimeout: 0s\n        machineConfigRef:\n          apiVersion: elemental.cattle.io/v1beta1\n          kind: MachineInventorySelectorTemplate\n          name: selectorControlPlanes\n      - name: workersPool\n        controlPlaneRole: false\n        etcdRole: false\n        workerRole: true\n        quantity: 1\n        unhealthyNodeTimeout: 0s\n        machineConfigRef:\n          apiVersion: elemental.cattle.io/v1beta1\n          kind: MachineInventorySelectorTemplate\n          name: selectorWorkers\n  kubernetesVersion: v1.23.7+k3s1\n---\napiVersion: elemental.cattle.io/v1beta1\nkind: MachineInventorySelectorTemplate\nmetadata:\n  name: selectorControlPlanes\n  namespace: fleet-default\nspec:\n  template:\n    spec:\n      selector:\n        matchLabels:\n          location: server-room-1\n---\napiVersion: elemental.cattle.io/v1beta1\nkind: MachineInventorySelectorTemplate\nmetadata:\n  name: selectorWorkers\n  namespace: fleet-default\nspec:\n  template:\n    spec:\n      selector:\n        matchLabels:\n          location: server-room-2"}}]);