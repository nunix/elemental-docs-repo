"use strict";(self.webpackChunkelemental_docs=self.webpackChunkelemental_docs||[]).push([[3676],{58068:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var i=t(17624),o=t(4552);const r={sidebar_label:"Configure Networking",title:""},a=void 0,s={id:"networking",title:"",description:"Network configuration with Elemental",source:"@site/versioned_docs/version-1.4/networking.md",sourceDirName:".",slug:"/networking",permalink:"/networking",draft:!1,unlisted:!1,tags:[],version:"1.4",frontMatter:{sidebar_label:"Configure Networking",title:""},sidebar:"docs",previous:{title:"Customize hostname",permalink:"/hostname"},next:{title:"Configure a VLAN",permalink:"/networking-vlans"}},l={},c=[{value:"Network configuration with Elemental",id:"network-configuration-with-elemental",level:2},{value:"Identify NetworkManager connection profile configuration files content",id:"identify-networkmanager-connection-profile-configuration-files-content",level:3},{value:"Elemental cloud-config",id:"elemental-cloud-config",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.M)(),...e.components},{Head:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t,{children:(0,i.jsx)("link",{rel:"canonical",href:"https://elemental.docs.rancher.com/networking"})}),"\n",(0,i.jsx)(n.h2,{id:"network-configuration-with-elemental",children:"Network configuration with Elemental"}),"\n",(0,i.jsx)(n.p,{children:"Elemental cloud-config support does not include declarative networking at the moment."}),"\n",(0,i.jsxs)(n.p,{children:["The defaul OS channel shipped with Elemental provides SLE Micro OS images with ",(0,i.jsx)(n.a,{href:"https://networkmanager.dev",children:"NetworkManager"})," which enables DCHP ethernet configuration automatically."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"cloud-config-reference",children:"Elemental cloud-config"})," allows to create NetworkManager connection profile configuration files in order to customize the host network."]}),"\n",(0,i.jsx)(n.p,{children:"To define custom network configuration for your Elemental OS deployment the required steps are:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Identify the content of the desired NetworkManager connection profile configuration files"}),"\n",(0,i.jsxs)(n.li,{children:["Include a ",(0,i.jsx)(n.code,{children:"write_files"})," cloud-config snippet in the Elemental ",(0,i.jsx)(n.a,{href:"machineregistration-reference",children:"MachineRegistration"})," resource to create configuration files with content identified in the previous step"]}),"\n"]}),"\n",(0,i.jsxs)(n.admonition,{title:"info",type:"info",children:[(0,i.jsxs)(n.p,{children:["The cloud-config configuration put in the Elemental ",(0,i.jsx)(n.a,{href:"machineregistration-reference",children:"MachineRegistration"})," is applied on the installed system only, not on the generated ISO/Image.\nThis means that when booting from the Elemental ISO/Image the ",(0,i.jsx)(n.a,{href:"machineregistration-reference",children:"MachineRegistration"})," cloud-config is not applied on the host: it will be applied only after the OS is installed and rebooted."]}),(0,i.jsxs)(n.p,{children:["Host configuration during Elemental ISO/Image boot is possible adding the cloud-config customization in the ",(0,i.jsx)(n.a,{href:"seedimage-reference",children:"SeedImage"})," resource instead of the ",(0,i.jsx)(n.a,{href:"machineregistration-reference",children:"MachineRegistration"})," one."]})]}),"\n",(0,i.jsx)(n.h3,{id:"identify-networkmanager-connection-profile-configuration-files-content",children:"Identify NetworkManager connection profile configuration files content"}),"\n",(0,i.jsxs)(n.p,{children:["NetworkManager supports multiple connection profile storage formats.\nWhile one could focus on any of the supported configuration file plugins, the ",(0,i.jsx)(n.a,{href:"https://networkmanager.dev/docs/api/latest/nm-settings-keyfile.html",children:"keyfile plugin"})," is the one we recommend: it allows to store all the possible connection profile data and has a quite simple syntax."]}),"\n",(0,i.jsxs)(n.p,{children:["NetworkManager keyfiles can be written directly following the ",(0,i.jsx)(n.a,{href:"https://networkmanager.dev/docs/api/latest/nm-settings-keyfile.html",children:"nm-settings-keyfile man page"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Anyway, it could be easier to instruct NetworkManager to configure a connection profile if a live system is available: NetworkManager then creates the keyfiles for us in the ",(0,i.jsx)(n.code,{children:"/etc/NetworkManager/system-connections/"})," directory."]}),"\n",(0,i.jsx)(n.p,{children:"There are multiple different ways to interact with NetworkManager and create connection profiles. The most used and handy configuration tools include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://networkmanager.dev/docs/api/latest/nmcli.html",children:"nmcli"})," - the NetworkManager CLI"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://networkmanager.dev/docs/api/latest/nmtui.html",children:"nmtui"})," - the NetworManager Text User Interface"]}),"\n",(0,i.jsx)(n.li,{children:"the UI applets present in all the major linux desktops environments"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Finally, to generate NetworkManager keyfiles ",(0,i.jsx)(n.em,{children:"offline"})," using a declarative approach, one could use the ",(0,i.jsx)(n.a,{href:"https://github.com/suse-edge/nm-configurator",children:"nm-configurator"})," project."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",metastring:'title="Example: generate a static IPv4 ethernet connection porfile with nmcli" showLineNumbers',children:"nmcli connection add \\\n  con-name fixed-ip\\\n  type ethernet \\\n  ipv4.method manual \\\n  ipv4.addresses 192.168.1.2/24 \\\n  ipv4.gateway 192.168.1.1 \\\n  ipv4.dns 192.168.1.1\n"})}),"\n",(0,i.jsxs)(n.p,{children:["After running the above command, you will find your keyfile at\n",(0,i.jsx)(n.code,{children:"/etc/NetworkManager/system-connections/fixed-ip.nmconnection"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"elemental-cloud-config",children:"Elemental cloud-config"}),"\n",(0,i.jsxs)(n.p,{children:["The NetworkManager connection profile keyfiles can be injected in a ",(0,i.jsx)(n.a,{href:"machineregistration-reference",children:"MachineRegistration"})," using the ",(0,i.jsx)(n.code,{children:"write_files"})," module."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"content"})," can be either plain text or base64 encoded (",(0,i.jsx)(n.code,{children:"encoding: b64"}),")."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="Example: MachineRegistration with static IPv4 ethernet connection profile" showLineNumbers',children:'apiVersion: elemental.cattle.io/v1beta1\nkind: MachineRegistration\nmetadata:\n  name: fire-nodes\n  namespace: fleet-default\nspec:\n  config:\n    cloud-config:\n      users:\n        - name: root\n          passwd: root\n      write_files:\n        - content: |\n            [connection]\n            id=fixed-ip\n            uuid=9039a243-452d-4f01-9424-78648404d50b\n            type=ethernet\n            [ipv4]\n            address1=192.168.1.2/24,192.168.1.1\n            dns=192.168.1.1;\n            method=manual\n          path: /etc/NetworkManager/system-connections/fixed-ip.nmconnection\n          permissions: 600\n    elemental:\n      install:\n        reboot: true\n        device: /dev/sda\n        debug: true\n  machineInventoryLabels:\n    element: fire\n    manufacturer: "${System Information/Manufacturer}"\n    productName: "${System Information/Product Name}"\n    serialNumber: "${System Information/Serial Number}"\n    machineUUID: "${System Information/UUID}"\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["The connection profile keyfile file permissions should allow read and write access to the root user only, otherwise NetworkManager will refuse to load the connection profile: ensure to set ",(0,i.jsx)(n.code,{children:"permissions"})," to ",(0,i.jsx)(n.code,{children:"600"})," for NetworkManager keyfiles, otherwise your connection profiles will not be loaded."]})})]})}function h(e={}){const{wrapper:n}={...(0,o.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},4552:(e,n,t)=>{t.d(n,{I:()=>s,M:()=>a});var i=t(11504);const o={},r=i.createContext(o);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);